name: Build and Release

on:
  release:
    types: [created]

jobs:
  build-windows-msvc:
    name: Build Windows (MSVC)
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup CMake
        uses: lukka/get-cmake@latest

      - name: Setup MSVC
        uses: ilammy/msvc-dev-cmd@v1

      - name: Configure CMake
        run: |
          cmake -B build -S . -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: |
          cmake --build build --config Release

      - name: Prepare artifacts
        run: |
          mkdir -p artifacts/windows-msvc
          cp build/Release/*.exe artifacts/windows-msvc/
          cp build/Release/*.dll artifacts/windows-msvc/
          cp -r assets artifacts/windows-msvc/ || echo "No assets directory found"

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dungeon-windows-msvc
          path: artifacts/windows-msvc

      - name: Upload to release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/windows-msvc/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-windows-mingw:
    name: Build Windows (MinGW)
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup MinGW
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-make
            mingw-w64-x86_64-ninja

      - name: Configure CMake
        shell: msys2 {0}
        run: |
          mkdir -p build
          cd build
          cmake -G "Ninja" -DCMAKE_BUILD_TYPE=Release ..

      - name: Build
        shell: msys2 {0}
        run: |
          cd build
          cmake --build . --config Release

      - name: Prepare artifacts
        shell: msys2 {0}
        run: |
          mkdir -p artifacts/windows-mingw
          cp build/*.exe artifacts/windows-mingw/
          cp build/*.dll artifacts/windows-mingw/
          cp -r assets artifacts/windows-mingw/ || echo "No assets directory found"

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dungeon-windows-mingw
          path: artifacts/windows-mingw

      - name: Upload to release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/windows-mingw/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake ninja-build

      - name: Configure CMake
        run: |
          cmake -B build -S . -G Ninja -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: |
          cmake --build build --config Release

      - name: Prepare artifacts
        run: |
          mkdir -p artifacts/linux
          cp build/Release/${PROJECT_NAME} artifacts/linux/ || cp build/${PROJECT_NAME} artifacts/linux/
          cp build/Release/*.so artifacts/linux/ || echo "No .so files found"
          cp -r assets artifacts/linux/ || echo "No assets directory found"

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dungeon-linux
          path: artifacts/linux

      - name: Upload to release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/linux/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}